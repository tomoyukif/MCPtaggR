% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/01_functions.R
\name{mergeGenome}
\alias{mergeGenome}
\title{Merge genome sequence data and build a MCPtag class object}
\usage{
mergeGenome(
  snps,
  ref_fn,
  alt_fn,
  out_dir = "",
  out_fn = "merged_genome",
  indexing = TRUE
)

mergeGenome(
  snps,
  ref_fn,
  alt_fn,
  out_dir = "",
  out_fn = "merged_genome",
  indexing = TRUE
)
}
\arguments{
\item{snps}{A SNPs class object.}

\item{ref_fn}{A string to specify the path to the reference genome FASTA.}

\item{alt_fn}{A string to specify the path to the alternative genome FASTA.}

\item{out_dir}{A string to specify the output directory.}

\item{out_fn}{A string to specify the prefix of output files.}

\item{indexing}{A logical value to indicate whether you need to build index
files of the merged genome that would be generated by this function.}
}
\value{
A MCPtag class object.

A MCPtag class object.
}
\description{
This function provide a pipeline to skip the mappability validation conducted
via \code{digestGenome()}, \code{alignTAG()}, and \code{findMCPtag()}.

This function provide a pipeline to skip the mappability validation conducted
via \code{digestGenome()}, \code{alignTAG()}, and \code{findMCPtag()}.
}
\details{
similar with \code{findMCPtag()}, \code{mergeGenome()} also returns a
\code{MCPtag} class object, However, \code{mergeGenome()} does not evaluate mappability
of collinear-polymorphic tags found by MUMmer, while you can skip a time
consuming mappability validation step. To get the best result by MCPtagg, it
is highly recommended to validate mappability.

similar with \code{findMCPtag()}, \code{mergeGenome()} also returns a
\code{MCPtag} class object, However, \code{mergeGenome()} does not evaluate mappability
of collinear-polymorphic tags found by MUMmer, while you can skip a time
consuming mappability validation step. To get the best result by MCPtagg, it
is highly recommended to validate mappability.
}
\examples{
\dontrun{
mcptag <- mergeGenome(snps = snps,
                      ref_fn = "path/to/ref.fa",
                      alt_fn = "path/to/alt.fa",
                      out_dir = "",
                      out_fn = "merge_genome",
                      indexing = TRUE)
}

\dontrun{
mcptag <- mergeGenome(snps = snps,
                      ref_fn = "path/to/ref.fa",
                      alt_fn = "path/to/alt.fa",
                      out_dir = "",
                      out_fn = "merge_genome",
                      indexing = TRUE)
}

}
